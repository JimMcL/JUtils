% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/progressbar.R
\name{JBuildProgressBar}
\alias{JBuildProgressBar}
\title{Creates a general purpose progress bar that reports remaining elapsed time
rather than number of items.}
\usage{
JBuildProgressBar(
  progressBar = c("text", "win", "tk", "none"),
  numItems,
  title = NULL,
  showPC = FALSE
)
}
\arguments{
\item{progressBar}{Type of progress bar.}

\item{numItems}{Number of items to be processed.}

\item{title}{Optional message displayed on the progress bar.}

\item{showPC}{If \code{TRUE}, include percent complete in progress message.}
}
\value{
A function which should be called for each item as it is processed.
}
\description{
This function attempts to guess the total elapsed time based on time so far
and \code{numItems}.
}
\details{
The progress bar can be displayed as a Windows popup, a TCL popup, text
printed to the console, or no progress bar depending on the value of
\code{progressBar}.

The function (\code{fn}) returned by this function is usually called with no
arguments, once for each item to be processed. Call \code{fn(close = TRUE)}
to close the progress bar without processing all items. If the number of
items to be processed changes dynamically, call \code{fn(numNumItems = x)}.
}
\examples{
\dontrun{
n <- 20
pb <- JBuildProgressBar("win", numItems = n, title = "Progress")
for (i in 1:n) {
  # Execute slow task
  Sys.sleep(runif(1, max = 1))
  # Update progress bar
  pb()
}

# Optionally force close in case there weren't as many items as we expected
pb(close = TRUE)
# Optionally report total elapsed time
pb(printElapsed = TRUE)
}

}
