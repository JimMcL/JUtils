% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/animate.R
\name{JAnimateGIF}
\alias{JAnimateGIF}
\title{Combine multiple plots into an animated GIF file.}
\usage{
JAnimateGIF(
  videoFileName,
  nFrames = NULL,
  frameKeys = 1:nFrames,
  plotFn,
  frameRate = 30,
  loop = 0,
  gifMethod = c("auto", "magick-r", "gifski", "magick", "ffmpeg"),
  optimize = FALSE,
  progress = FALSE,
  tmpDir = tempdir(TRUE),
  ...
)
}
\arguments{
\item{videoFileName}{Name of the video file to be created. The file type is
inferred from the file extension, but must be GIF if \code{gifMethod == "gifski"}.}

\item{nFrames}{Number of frames to be generated. You must specify one of
\code{nFrames} or \code{frameKeys}.}

\item{frameKeys}{Vector of keys to be passed to \code{plotFn} to identify the frame
to be plotted. If not specified, \code{frameKeys} will be set to the sequence
\code{1:nFrames}.}

\item{plotFn}{Function which is called once for each frame. It is called once
for each frame to be generated, with a single argument which is one of the
values from \code{frameKeys}. If it does not generate a plot, the frame will
be silently skipped. If no frames are created for the entire animation, an
error is generated.}

\item{frameRate}{Play back frame rate - used to set the frame delay in the GIF
file.}

\item{loop}{Number of times animation should be played. 0 means loop
infinitely.}

\item{gifMethod}{Specify the library/tool used to convert from PNG to GIF:
\itemize{
  \item{\code{"magick-r"}}{ uses the \href{https://docs.ropensci.org/magick/articles/intro.html}{magick R
  package}.}
  \item{\code{"magick"}}{ uses the \href{https://imagemagick.org/script/download.php}{ImageMagick command line
  application}.}
  \item{\code{"gifski"}}{ uses the \href{https://gif.ski/}{gifski R package}.}
  \item{\code{"ffmpeg"}}{ uses the \href{https://ffmpeg.org/}{FFMpeg command line application}.}
  \item{\code{"auto"}}{ uses \code{"gifski"} if it is installed, otherwise uses \code{"magick-r"} if it is installed, otherwise uses \code{"magick"}.}
}}

\item{optimize}{Only used if \code{gifMethod == "magick-r"}. Passed to \link[magick]{image_animate}.}

\item{progress}{Only used if \code{gifMethod == "gifski"}. Passed to \link[gifski]{gifski}; if TRUE, prints some progress messages.}

\item{tmpDir}{Name of a directory to be used to create temporary files in.}

\item{...}{Any additional arguments are passed to the \code{\link{JPlotToPNG}}
function.}
}
\value{
The error message (as a character vector) from the ImageMack convert
  command, or \code{character(0)} (returned invisibly) on success.
}
\description{
Writes each frame to a PNG file, then combines them into a GIF
file. Frames are created by calling a custom plot function. The PNG to GIF
conversion is performed by a 3rd party R package or application.
}
\details{
You must have a suitable image conversion tool installed - see the documentation
of the argument \code{gifMethod} for details. \href{https://imagemagick.org/script/download.php}{ImageMagick}
installed, and the ImageMagick bin subdirectory must be in your PATH
environment variable. If ImageMagick is not installed, or is not in your PATH,
\code{JAnimateGIF} will fail with an exception such as:

\preformatted{Error in system2("magick", c("convert", "jp*.png", "-delay",
100/frameRate, : '"magick"' not found}.

For a general discussion about creating an animation in R, see
\url{https://stackoverflow.com/questions/1298100/creating-a-movie-from-a-series-of-plots-in-r},
or \url{https://r-graph-gallery.com/animation}.

The png to gif conversion can be quite time consuming for a large number of
frames, so start with a small number of frames to ensure everything works as
expected.

In theory, magick can create mpeg files, but I can't get it to work, so use
\code{gifMethod="ffmpeg"} for file formats other than GIF.
}
\examples{
\dontrun{
# Number of frames in the animation
nFrames <- 50

# A function to plot a coloured polygon
.plotPoly <- function(frame) {
  # Created an empty plot
  plot(NULL, xlim = c(-1, 1), ylim = c(-1, 1), asp = 1, xlab = "", ylab = "", axes = FALSE)
  # Frame starts from 1, but a 1 cornered polygon is not very visually interesting
  nCorners <- frame + 1
  angles <- 2 * pi * (1:nCorners) / nCorners
  f <- frame / nFrames
  # Pick a colour based on the frame number
  col <- rgb(sin(pi / 2 * f), cos(pi / 2 * f), sin(pi / 2 * (f + .5)))
  # Draw a polygon
  polygon(cos(angles), sin(angles), col = col, border = "black", lwd = 4)
}

JAnimateGIF("poly.gif", nFrames, plotFn = .plotPoly, frameRate = 10)
}

}
\seealso{
\code{\link{JPlotToPNG}}, \code{\link{JAnimateScenes}} for smoothly animating changing parameters.
}
