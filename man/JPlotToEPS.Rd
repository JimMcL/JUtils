% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_to_file.R
\name{JPlotToEPS}
\alias{JPlotToEPS}
\title{Plot to an EPS (encapsulated postscript) file}
\usage{
JPlotToEPS(
  filename,
  plotExpr,
  width = 180,
  height = NA,
  aspectRatio = 3/2,
  units = c("mm", "cm", "in"),
  bg = "white",
  paper = "special",
  family = "Helvetica",
  onlyIfDoesntExist = FALSE,
  createDirectory = TRUE,
  cairo = FALSE,
  ...
)
}
\arguments{
\item{filename}{The name of the EPS to create or overwrite. If NULL, plot output goes to the current device.}

\item{plotExpr}{A function or expression which will produce the plot to be
written to the file.}

\item{width}{The width of the output EPS file in \code{units}.}

\item{height}{The height of the output EPS file in \code{units}. Defaults to
\code{width / aspectRatio}. If \code{height} is specified,
\code{aspectRatio} will be ignored.}

\item{aspectRatio}{Aspect ratio (\code{width / height}) of the output EPS
file.}

\item{units}{Units of \code{width} and \code{height}.}

\item{bg}{Background colour - may be "transparent" for no background.}

\item{paper}{Paper size, defaults to "special" which is required if
\code{width} and \code{height} are to be used.}

\item{family}{The font family to be used. Passed to
\code{\link[grDevices]{postscript}}.}

\item{onlyIfDoesntExist}{If TRUE and the output file already exists,
\code{JPlotToEPS} will do nothing.}

\item{createDirectory}{If TRUE and \code{filename} is located in a directory
which doesn't exist, the directory will be created.}

\item{cairo}{If TRUE, the \code{\link[grDevices]{cairo}} device is used,
otherwise the \code{\link[grDevices]{postscript}} device is used (see Details).}

\item{...}{Any additional arguments are passed to
\code{\link[grDevices]{postscript}} or \code{\link[grDevices]{cairo}}.}
}
\value{
The result of evaluating \code{plotExpr} is returned invisibly (which
  means it is not automatically printed).
}
\description{
Writes the output of a plot to a EPS file. If you are using ggplot, try
either using \code{JPlotToEPS(filename, print(<plotting code>))} or else
\code{ggsave()}.
}
\details{
R provides two mechanisms (or 'graphics devices') for writing postscript: the
standard device (\code{\link[grDevices]{postscript}}) and the Cairo device
(\code{\link[grDevices]{cairo}}). The \code{cairo} device is an
alternative implementation for writing postscript that handles transparency,
although it may output a raster bitmap rather than vector data to do so.
Specify a value for the argument \code{fallback_resolution} to define the
resolution of the bitmap. See \code{\link[grDevices]{cairo}} for details.
}
\examples{
\dontrun{
plotWithAlpha <- function() {
    plot(1:3, type = 'l', lwd = 20, col = "#ffcc8888")
    lines(3:1, lwd = 20, col = "#88ccff88")
}

# This will generate a warning and an empty plot due to transparency
JPlotToEPS(filename, plotWithAlpha)
# This will work (more or less) as expected
JPlotToEPS(filename, plotWithAlpha, cairo = TRUE, fallback_resolution = 600)
}

}
\seealso{
\code{\link[grDevices]{postscriptFonts}},
  \code{\link[grDevices]{postscript}}, \code{\link[grDevices]{cairo}}
}
